---
- name:
  vars:
    _config: |
      {{ openproject_configuration_default
      | combine(openproject_configuration | default({}), recursive=True) }}
    _labels: |
      {{ openproject_labels_default
      | combine(openproject_traefik_labels | default({}), recursive=True) }}
    _docker_network: |
      {{ openproject_docker_network | default([{ 'name': 'bridge' }]) }}

  block:
    - debug: var=_config
    - debug: var=_docker_network

    - name: Assert that variables are defined
      assert:
        that:
          - openproject_secret_key_base is defined
          - openproject_db_password is defined

    - name: Start the openproject db container
      docker_container:
        image: "{{ openproject_postgres_image }}"
        name: openproject-db
        volumes:
          - '{{ openproject_db_volume }}'
        env:
          POSTGRES_PASSWORD: "{{ openproject_db_password }}"
          POSTGRES_DB: "openproject"

    - name: Start the openproject web container
      # notify: health_check_openproject
      docker_container:
        image: '{{ openproject_image }}'
        name: openproject-web
        ports: '{{ openproject_docker_ports }}'
        networks: '{{ _docker_network }}'
        env: "{{ _config }}"
        labels: "{{ _labels }}"
        #memory: 500M
        #memory_swap: 1.5GB
        #log_driver: json-file
        #log_options:
          #max-size: 10m
          #max-file: "2"

    - name: Start the openproject seeder container
      docker_container:
        image: '{{ openproject_image }}'
        name: openproject-seeder
        command: "./docker/prod/seeder"
        volumes:
          - '{{ openproject_assets_volume }}'
        env: "{{ _config }}"
        networks: '{{ _docker_network }}'
        labels:
          traefik.enable: "false"

    - name: Start the openproject cache container
      docker_container:
        image: memcached
        name: openproject-cache
        env: "{{ _config }}"
        labels:
          traefik.enable: "false"

    - name: Start the openproject worker container
      docker_container:
        image: '{{ openproject_image }}'
        name: openproject-worker
        command: "./docker/prod/worker"
        volumes:
          - '{{ openproject_assets_volume }}'
        env: "{{ _config }}"
        labels:
          traefik.enable: "false"

    - name: Start the openproject cron container
      docker_container:
        image: '{{ openproject_image }}'
        name: openproject-cron
        command: "./docker/prod/cron"
        volumes:
          - '{{ openproject_assets_volume }}'
        env: "{{ _config }}"
        labels:
          traefik.enable: "false"

  module_defaults:
    docker_container:
      pull: true
      restart_policy: unless-stopped
      networks: '{{ _docker_network }}'
      networks_cli_compatible: no
      #container_default_behavior: no_defaults
